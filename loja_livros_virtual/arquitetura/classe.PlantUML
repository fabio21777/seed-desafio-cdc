@startuml

' Base class
abstract class BaseDomain {
  -long id <<@Id>>
  -UUID uuid <<@AutoPopulated>>
  -LocalDateTime createdAt <<@DateCreated>>
}

' Main entities
class Livro {
  -String titulo
  -String resumo
  -String sumario
  -BigDecimal preco
  -Integer numeroPaginas
  -String isbn
  -LocalDateTime publicacao
}

class Categoria {
  -String nome
  +Categoria()
  +Categoria(String nome)
  +String getNome()
  +void setNome(String nome)
}

class Autor {
  -String email <<@Email>>
  -String nome
  -String descricao <<@Max(400)>>
}

' Country and State entities
class Pais {
  -String nome <<unique>>
}
note bottom of Pais: O nome é obrigatório e único

class Estado {
  -String nome <<unique>>
}
note bottom of Estado: O nome é obrigatório e único

class RefreshToken {
  -Long id
  -String username
  -String refreshToken
  -Boolean revoked
  -Instant dateCreated
}

class Role <<record>> {
  -Long id
  -String authority
}

class User <<record>> {
  -Long id
  -String username
  -String password
  -boolean enabled
  -boolean accountExpired
  -boolean accountLocked
  -boolean passwordExpired
}

class UserRole {
  -UserRoleId id
  +UserRole(UserRoleId id)
  +UserRoleId getId()
}

class UserRoleId <<embeddable>> {
}

' Interfaces
interface UserState {
}

' Inheritance relationships
BaseDomain <|-- Livro
BaseDomain <|-- Categoria
BaseDomain <|-- Autor
BaseDomain <|-- Pais
BaseDomain <|-- Estado
User ..|> UserState

' Entity relationships
Livro "*" -- "1" Categoria : has >
Livro "*" -- "1" Autor : has >
User "1" -- "*" UserRole : has >
UserRole "*" -- "1" Role : has >
UserRoleId "*" -- "1" User : references >
UserRoleId "*" -- "1" Role : references >
Estado "*" -- "1" Pais : pertence >

@enduml
